# -*- coding: utf-8 -*-
"""Face and Neck Detection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p3GCB13TR8JMSOvtOBGPxeiRoK4nEO7_
"""

#Pre Trained CNN Face Detection
import cv2
import dlib
import numpy as np
import matplotlib.pyplot as plt
import math


def get_vid_frames(path, arr):
    vid_obj = cv2.VideoCapture(path)
    success = 1
    count = 0
    while(success and count < 100):
        success, image = vid_obj.read()
        arr.append(image)
        count += 1

vid_arr = []
vid_path = "DIRECTORY/set1/video_front.mp4" 
#vid_path = "DIRECTORY/set2/video_front.mp4"
#vid_path = "DIRECTORY/set1/video_bottom.mp4"
#vid_path = "DIRECTORY/set2/video_bottom.mp4"

get_vid_frames(vid_path, vid_arr)

dnnFaceDetector = dlib.cnn_face_detection_model_v1("/content/drive/MyDrive/ECE239AS Final Project/face_detection_models/mmod_human_face_detector.dat")


count = 0
error_count = 0
neck_inclusion = 200

for frame in vid_arr:
    gray_im = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    rects = dnnFaceDetector(gray_im, 1)
    if (len(rects) != 1):
        error_count += 1
    else:
        for (i, rect) in enumerate(rects):
            x1 = rect.rect.left()
            y1 = rect.rect.top()
            x2 = rect.rect.right()
            y2 = rect.rect.bottom()
            # Draw rectangle around the face
            face = frame[y1:y2+math.floor(0.75*(y2-y1)),x1:x2]
            

print("error count: ",error_count)